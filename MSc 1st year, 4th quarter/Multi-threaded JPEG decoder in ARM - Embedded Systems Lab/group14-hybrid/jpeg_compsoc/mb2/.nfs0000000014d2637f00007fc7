#include <comik.h>
#include <global_memmap.h>
#include <5kk03-utils.h>
#include <hw_dma.h>
#include <fifo.h>
#include <memmap.h>
#include "structures.h"

//MB2
int main (void){

typedef struct 
{
    PBlock pbout[10];
    SubHeader1 sh1;
    SubHeader2 sh2;
} TokenInfo;
volatile TokenInfo ti;
	// Enable stack checking.
	start_stack_check();
	//hw_declare_dmas(1);
	//hw_dma_add(1, (int*)mb2_dma0_BASEADDR);
	int dma_num = 0;
#if HAS_DMA

	dma_num = 1;
#endif




	FCB *fcb = fifo_add(
	MB2_FIFO_WC,
	MB2_FIFO_RC,
	MB2_FIFO_RWC,
	MB2_FIFO_RRC,
	MB2_FIFO_BUFFER,
	MB2_FIFO_RBUFFER,
	2,
	sizeof(ti),
	1,1,
	dma_num,
	1,
	0,
	0);
	// Sync with the monitor.
	mk_mon_sync();

	volatile SubHeader1 sh1;
	volatile SubHeader2 sh2;
	volatile PBlock pbout[10];
	//PBlock pbout[10];
	while(1){
		fifo_set_consumption_token_rate(fcb, 1);
		while(!fifo_check_data(fcb));
		volatile TokenInfo *tip = fifo_claim_data(fcb);
		fifo_pull(fcb);
		// memcpy(&ti, tip , sizeof(TokenInfo));
		ti = *tip;
		// mk_mon_debug_info(ti.pbout[9].linear[6]);
		// mk_mon_debug_info(ti.sh1.n_comp);
		fifo_release_space(fcb);

		sh1 = ti.sh1;
		sh2 = ti.sh2;
		//memcpy(pbout, ti.pbout , 10*sizeof(PBlock));
    
		ColorBuffer cbout;
        cc( &sh1, &(ti.pbout[0]), &cbout);
    	
        raster( &sh2, &cbout );
        mk_mon_debug_info(sh2.leftover);
        if ( sh2.leftover == 0 ){
            break;
        }

	}
	// Signal the monitor we are done.
	mk_mon_debug_tile_finished();
	return 0;


}
