$date
	Mon Oct 16 12:15:50 2017
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test_op_1010_C $end
$var wire 8 ! r [7:0] $end
$var wire 1 " Z $end
$var wire 1 # V $end
$var wire 1 $ N $end
$var wire 1 % C $end
$var reg 8 & a [7:0] $end
$var reg 8 ' b [7:0] $end
$var reg 4 ( op [3:0] $end
$scope module alu_inst $end
$var wire 1 # V $end
$var wire 8 ) a [7:0] $end
$var wire 8 * b [7:0] $end
$var wire 4 + op [3:0] $end
$var wire 9 , s [8:0] $end
$var wire 8 - r [7:0] $end
$var wire 1 . k $end
$var wire 1 / j $end
$var wire 1 0 i $end
$var wire 1 1 c_in $end
$var wire 8 2 b_for_rca [7:0] $end
$var wire 1 " Z $end
$var wire 1 $ N $end
$var wire 1 % C $end
$scope module gatemux0 $end
$var wire 1 3 aX_in $end
$var wire 1 4 bX_in $end
$var wire 1 5 bX_out $end
$var wire 1 0 i $end
$var wire 1 / j $end
$var wire 1 . k $end
$var wire 1 6 mux2_1_in0 $end
$var wire 1 7 mux2_1_in1 $end
$var wire 1 8 mux2_2_in1 $end
$var wire 1 9 s_in $end
$var wire 1 : rX_out $end
$var wire 1 ; mux2_2_out $end
$var wire 1 < mux2_1_out $end
$scope module mux2_1 $end
$var wire 1 6 in0 $end
$var wire 1 7 in1 $end
$var wire 1 0 sel $end
$var wire 1 < out $end
$upscope $end
$scope module mux2_2 $end
$var wire 1 < in0 $end
$var wire 1 8 in1 $end
$var wire 1 / sel $end
$var wire 1 ; out $end
$upscope $end
$scope module mux2_3 $end
$var wire 1 ; in0 $end
$var wire 1 9 in1 $end
$var wire 1 . sel $end
$var wire 1 : out $end
$upscope $end
$upscope $end
$scope module gatemux1 $end
$var wire 1 = aX_in $end
$var wire 1 > bX_in $end
$var wire 1 ? bX_out $end
$var wire 1 0 i $end
$var wire 1 / j $end
$var wire 1 . k $end
$var wire 1 @ mux2_1_in0 $end
$var wire 1 A mux2_1_in1 $end
$var wire 1 B mux2_2_in1 $end
$var wire 1 C s_in $end
$var wire 1 D rX_out $end
$var wire 1 E mux2_2_out $end
$var wire 1 F mux2_1_out $end
$scope module mux2_1 $end
$var wire 1 @ in0 $end
$var wire 1 A in1 $end
$var wire 1 0 sel $end
$var wire 1 F out $end
$upscope $end
$scope module mux2_2 $end
$var wire 1 F in0 $end
$var wire 1 B in1 $end
$var wire 1 / sel $end
$var wire 1 E out $end
$upscope $end
$scope module mux2_3 $end
$var wire 1 E in0 $end
$var wire 1 C in1 $end
$var wire 1 . sel $end
$var wire 1 D out $end
$upscope $end
$upscope $end
$scope module gatemux2 $end
$var wire 1 G aX_in $end
$var wire 1 H bX_in $end
$var wire 1 I bX_out $end
$var wire 1 0 i $end
$var wire 1 / j $end
$var wire 1 . k $end
$var wire 1 J mux2_1_in0 $end
$var wire 1 K mux2_1_in1 $end
$var wire 1 L mux2_2_in1 $end
$var wire 1 M s_in $end
$var wire 1 N rX_out $end
$var wire 1 O mux2_2_out $end
$var wire 1 P mux2_1_out $end
$scope module mux2_1 $end
$var wire 1 J in0 $end
$var wire 1 K in1 $end
$var wire 1 0 sel $end
$var wire 1 P out $end
$upscope $end
$scope module mux2_2 $end
$var wire 1 P in0 $end
$var wire 1 L in1 $end
$var wire 1 / sel $end
$var wire 1 O out $end
$upscope $end
$scope module mux2_3 $end
$var wire 1 O in0 $end
$var wire 1 M in1 $end
$var wire 1 . sel $end
$var wire 1 N out $end
$upscope $end
$upscope $end
$scope module gatemux3 $end
$var wire 1 Q aX_in $end
$var wire 1 R bX_in $end
$var wire 1 S bX_out $end
$var wire 1 0 i $end
$var wire 1 / j $end
$var wire 1 . k $end
$var wire 1 T mux2_1_in0 $end
$var wire 1 U mux2_1_in1 $end
$var wire 1 V mux2_2_in1 $end
$var wire 1 W s_in $end
$var wire 1 X rX_out $end
$var wire 1 Y mux2_2_out $end
$var wire 1 Z mux2_1_out $end
$scope module mux2_1 $end
$var wire 1 T in0 $end
$var wire 1 U in1 $end
$var wire 1 0 sel $end
$var wire 1 Z out $end
$upscope $end
$scope module mux2_2 $end
$var wire 1 Z in0 $end
$var wire 1 V in1 $end
$var wire 1 / sel $end
$var wire 1 Y out $end
$upscope $end
$scope module mux2_3 $end
$var wire 1 Y in0 $end
$var wire 1 W in1 $end
$var wire 1 . sel $end
$var wire 1 X out $end
$upscope $end
$upscope $end
$scope module gatemux4 $end
$var wire 1 [ aX_in $end
$var wire 1 \ bX_in $end
$var wire 1 ] bX_out $end
$var wire 1 0 i $end
$var wire 1 / j $end
$var wire 1 . k $end
$var wire 1 ^ mux2_1_in0 $end
$var wire 1 _ mux2_1_in1 $end
$var wire 1 ` mux2_2_in1 $end
$var wire 1 a s_in $end
$var wire 1 b rX_out $end
$var wire 1 c mux2_2_out $end
$var wire 1 d mux2_1_out $end
$scope module mux2_1 $end
$var wire 1 ^ in0 $end
$var wire 1 _ in1 $end
$var wire 1 0 sel $end
$var wire 1 d out $end
$upscope $end
$scope module mux2_2 $end
$var wire 1 d in0 $end
$var wire 1 ` in1 $end
$var wire 1 / sel $end
$var wire 1 c out $end
$upscope $end
$scope module mux2_3 $end
$var wire 1 c in0 $end
$var wire 1 a in1 $end
$var wire 1 . sel $end
$var wire 1 b out $end
$upscope $end
$upscope $end
$scope module gatemux5 $end
$var wire 1 e aX_in $end
$var wire 1 f bX_in $end
$var wire 1 g bX_out $end
$var wire 1 0 i $end
$var wire 1 / j $end
$var wire 1 . k $end
$var wire 1 h mux2_1_in0 $end
$var wire 1 i mux2_1_in1 $end
$var wire 1 j mux2_2_in1 $end
$var wire 1 k s_in $end
$var wire 1 l rX_out $end
$var wire 1 m mux2_2_out $end
$var wire 1 n mux2_1_out $end
$scope module mux2_1 $end
$var wire 1 h in0 $end
$var wire 1 i in1 $end
$var wire 1 0 sel $end
$var wire 1 n out $end
$upscope $end
$scope module mux2_2 $end
$var wire 1 n in0 $end
$var wire 1 j in1 $end
$var wire 1 / sel $end
$var wire 1 m out $end
$upscope $end
$scope module mux2_3 $end
$var wire 1 m in0 $end
$var wire 1 k in1 $end
$var wire 1 . sel $end
$var wire 1 l out $end
$upscope $end
$upscope $end
$scope module gatemux6 $end
$var wire 1 o aX_in $end
$var wire 1 p bX_in $end
$var wire 1 q bX_out $end
$var wire 1 0 i $end
$var wire 1 / j $end
$var wire 1 . k $end
$var wire 1 r mux2_1_in0 $end
$var wire 1 s mux2_1_in1 $end
$var wire 1 t mux2_2_in1 $end
$var wire 1 u s_in $end
$var wire 1 v rX_out $end
$var wire 1 w mux2_2_out $end
$var wire 1 x mux2_1_out $end
$scope module mux2_1 $end
$var wire 1 r in0 $end
$var wire 1 s in1 $end
$var wire 1 0 sel $end
$var wire 1 x out $end
$upscope $end
$scope module mux2_2 $end
$var wire 1 x in0 $end
$var wire 1 t in1 $end
$var wire 1 / sel $end
$var wire 1 w out $end
$upscope $end
$scope module mux2_3 $end
$var wire 1 w in0 $end
$var wire 1 u in1 $end
$var wire 1 . sel $end
$var wire 1 v out $end
$upscope $end
$upscope $end
$scope module gatemux7 $end
$var wire 1 y aX_in $end
$var wire 1 z bX_in $end
$var wire 1 { bX_out $end
$var wire 1 0 i $end
$var wire 1 / j $end
$var wire 1 . k $end
$var wire 1 | mux2_1_in0 $end
$var wire 1 } mux2_1_in1 $end
$var wire 1 ~ mux2_2_in1 $end
$var wire 1 !" s_in $end
$var wire 1 "" rX_out $end
$var wire 1 #" mux2_2_out $end
$var wire 1 $" mux2_1_out $end
$scope module mux2_1 $end
$var wire 1 | in0 $end
$var wire 1 } in1 $end
$var wire 1 0 sel $end
$var wire 1 $" out $end
$upscope $end
$scope module mux2_2 $end
$var wire 1 $" in0 $end
$var wire 1 ~ in1 $end
$var wire 1 / sel $end
$var wire 1 #" out $end
$upscope $end
$scope module mux2_3 $end
$var wire 1 #" in0 $end
$var wire 1 !" in1 $end
$var wire 1 . sel $end
$var wire 1 "" out $end
$upscope $end
$upscope $end
$scope module rca8_inst $end
$var wire 8 %" a [7:0] $end
$var wire 8 &" b [7:0] $end
$var wire 1 1 c0 $end
$var wire 9 '" s [8:0] $end
$var wire 7 (" c [6:0] $end
$scope module fa1 $end
$var wire 1 )" a $end
$var wire 1 *" b $end
$var wire 1 1 c_in $end
$var wire 1 +" c_out $end
$var wire 1 ," s $end
$var wire 1 -" ha2c $end
$var wire 1 ." ha1s $end
$var wire 1 /" ha1c $end
$scope module ha1 $end
$var wire 1 )" a $end
$var wire 1 *" b $end
$var wire 1 /" c $end
$var wire 1 ." s $end
$upscope $end
$scope module ha2 $end
$var wire 1 1 a $end
$var wire 1 ." b $end
$var wire 1 -" c $end
$var wire 1 ," s $end
$upscope $end
$upscope $end
$scope module fa2 $end
$var wire 1 0" a $end
$var wire 1 1" b $end
$var wire 1 2" c_in $end
$var wire 1 3" c_out $end
$var wire 1 4" s $end
$var wire 1 5" ha2c $end
$var wire 1 6" ha1s $end
$var wire 1 7" ha1c $end
$scope module ha1 $end
$var wire 1 0" a $end
$var wire 1 1" b $end
$var wire 1 7" c $end
$var wire 1 6" s $end
$upscope $end
$scope module ha2 $end
$var wire 1 2" a $end
$var wire 1 6" b $end
$var wire 1 5" c $end
$var wire 1 4" s $end
$upscope $end
$upscope $end
$scope module fa3 $end
$var wire 1 8" a $end
$var wire 1 9" b $end
$var wire 1 :" c_in $end
$var wire 1 ;" c_out $end
$var wire 1 <" s $end
$var wire 1 =" ha2c $end
$var wire 1 >" ha1s $end
$var wire 1 ?" ha1c $end
$scope module ha1 $end
$var wire 1 8" a $end
$var wire 1 9" b $end
$var wire 1 ?" c $end
$var wire 1 >" s $end
$upscope $end
$scope module ha2 $end
$var wire 1 :" a $end
$var wire 1 >" b $end
$var wire 1 =" c $end
$var wire 1 <" s $end
$upscope $end
$upscope $end
$scope module fa4 $end
$var wire 1 @" a $end
$var wire 1 A" b $end
$var wire 1 B" c_in $end
$var wire 1 C" c_out $end
$var wire 1 D" s $end
$var wire 1 E" ha2c $end
$var wire 1 F" ha1s $end
$var wire 1 G" ha1c $end
$scope module ha1 $end
$var wire 1 @" a $end
$var wire 1 A" b $end
$var wire 1 G" c $end
$var wire 1 F" s $end
$upscope $end
$scope module ha2 $end
$var wire 1 B" a $end
$var wire 1 F" b $end
$var wire 1 E" c $end
$var wire 1 D" s $end
$upscope $end
$upscope $end
$scope module fa5 $end
$var wire 1 H" a $end
$var wire 1 I" b $end
$var wire 1 J" c_in $end
$var wire 1 K" c_out $end
$var wire 1 L" s $end
$var wire 1 M" ha2c $end
$var wire 1 N" ha1s $end
$var wire 1 O" ha1c $end
$scope module ha1 $end
$var wire 1 H" a $end
$var wire 1 I" b $end
$var wire 1 O" c $end
$var wire 1 N" s $end
$upscope $end
$scope module ha2 $end
$var wire 1 J" a $end
$var wire 1 N" b $end
$var wire 1 M" c $end
$var wire 1 L" s $end
$upscope $end
$upscope $end
$scope module fa6 $end
$var wire 1 P" a $end
$var wire 1 Q" b $end
$var wire 1 R" c_in $end
$var wire 1 S" c_out $end
$var wire 1 T" s $end
$var wire 1 U" ha2c $end
$var wire 1 V" ha1s $end
$var wire 1 W" ha1c $end
$scope module ha1 $end
$var wire 1 P" a $end
$var wire 1 Q" b $end
$var wire 1 W" c $end
$var wire 1 V" s $end
$upscope $end
$scope module ha2 $end
$var wire 1 R" a $end
$var wire 1 V" b $end
$var wire 1 U" c $end
$var wire 1 T" s $end
$upscope $end
$upscope $end
$scope module fa7 $end
$var wire 1 X" a $end
$var wire 1 Y" b $end
$var wire 1 Z" c_in $end
$var wire 1 [" c_out $end
$var wire 1 \" s $end
$var wire 1 ]" ha2c $end
$var wire 1 ^" ha1s $end
$var wire 1 _" ha1c $end
$scope module ha1 $end
$var wire 1 X" a $end
$var wire 1 Y" b $end
$var wire 1 _" c $end
$var wire 1 ^" s $end
$upscope $end
$scope module ha2 $end
$var wire 1 Z" a $end
$var wire 1 ^" b $end
$var wire 1 ]" c $end
$var wire 1 \" s $end
$upscope $end
$upscope $end
$scope module fa8 $end
$var wire 1 `" a $end
$var wire 1 a" b $end
$var wire 1 b" c_in $end
$var wire 1 c" c_out $end
$var wire 1 d" s $end
$var wire 1 e" ha2c $end
$var wire 1 f" ha1s $end
$var wire 1 g" ha1c $end
$scope module ha1 $end
$var wire 1 `" a $end
$var wire 1 a" b $end
$var wire 1 g" c $end
$var wire 1 f" s $end
$upscope $end
$scope module ha2 $end
$var wire 1 b" a $end
$var wire 1 f" b $end
$var wire 1 e" c $end
$var wire 1 d" s $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
b0 ("
b0 '"
b0 &"
b0 %"
0$"
0#"
0""
0!"
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
b0 2
01
00
0/
0.
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
0%
0$
1#
1"
b0 !
$end
#50
1%
1c"
1e"
1b"
1["
1]"
1Z"
1S"
1U"
1R"
1K"
1M"
1J"
1C"
1E"
1B"
1;"
1:
1="
0N
0X
0b
0l
0v
0""
19
1:"
0M
0W
0a
0k
0u
0$
0!"
1,"
b1111110 ("
13"
0<"
0D"
0L"
0T"
0\"
0d"
b1 !
b1 -
0D
1."
17"
1>"
1F"
1N"
1V"
1^"
1f"
0C
1*"
11"
19"
1A"
1I"
1Q"
1Y"
1a"
0"
b100000001 ,
b100000001 '"
04"
15
1?
1E
1I
1S
1]
1g
1q
b11111111 2
b11111111 &"
1{
1A
1B
06"
1.
1/
1=
10"
b1010 (
b1010 +
b10 &
b10 )
b10 %"
#150
